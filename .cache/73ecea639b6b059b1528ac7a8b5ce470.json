{"dependencies":[{"name":"/Users/fowlerb/Documents/sites/daily-programmer/tsconfig.json","includedInParent":true,"mtime":1529552703583},{"name":"/Users/fowlerb/Documents/sites/daily-programmer/package.json","includedInParent":true,"mtime":1529392057287},{"name":"/Users/fowlerb/Documents/sites/daily-programmer/.babelrc","includedInParent":true,"mtime":1529385663373}],"generated":{"js":"function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Challenge #359 - Regular Paperfold Sequence Generator\n * https://www.reddit.com/r/dailyprogrammer/comments/8g0iil/20180430_challenge_359_easy_regular_paperfold/\n * Recursion idea was from a solution provided\n */\n{\n    /**\n     * paperfold function\n     *\n     * In each iteration of this process, a 1 is placed at the end of the previous iteration's string,\n     * then this string is repeated in reverse order, replacing 0 by 1 and vice versa.\n     *\n     * @param {number[]} fold\n     * @param {number} sequences\n     */\n    var paperfold = function paperfold() {\n        var fold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [1];\n        var sequences = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 7;\n\n        fold.push.apply(fold, [1].concat(_toConsumableArray(fold.slice(0).reverse().map(function (n) {\n            return +!n;\n        }))));\n        return sequences === 0 ? fold : paperfold(fold, sequences - 1);\n    };\n    // console.log(paperfold([1], 0));\n    console.log(paperfold([1], 1));\n    // console.log(paperfold([1], 2));\n    // console.log(paperfold([1], 3));\n}","map":{"mappings":[{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":10,"column":1},"generated":{"line":9,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":19,"column":1},"generated":{"line":18,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":19,"column":7},"generated":{"line":18,"column":8}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":19,"column":38},"generated":{"line":18,"column":20}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":19,"column":7},"generated":{"line":18,"column":29}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":19,"column":38},"generated":{"line":18,"column":38}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":18,"column":41}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":19,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":19,"column":12}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":19,"column":16}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":19,"column":87}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":19,"column":88}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":19,"column":89}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":19,"column":90}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":20,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":20,"column":12}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":20,"column":21}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":21,"column":22},"generated":{"line":20,"column":92}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":20,"column":93}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":22,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":23,"column":7},"generated":{"line":22,"column":13}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":22,"column":17}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":24,"column":3},"generated":{"line":22,"column":31}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":22,"column":32}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":22,"column":60}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":26,"column":5},"generated":{"line":22,"column":65}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":22,"column":70}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":22,"column":71}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":22,"column":72}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":27,"column":5},"generated":{"line":22,"column":74}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":22,"column":81}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":5},"generated":{"line":22,"column":84}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":22,"column":87}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":22,"column":88}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":23,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":14},"generated":{"line":23,"column":19}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":15},"generated":{"line":23,"column":20}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":16},"generated":{"line":23,"column":21}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":23,"column":22}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":28,"column":9},"generated":{"line":24,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":25,"column":6},"generated":{"line":24,"column":9}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":24,"column":10}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":25,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":25,"column":15}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":23},"generated":{"line":25,"column":29}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":25,"column":30}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":27},"generated":{"line":25,"column":33}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":25,"column":37}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":34},"generated":{"line":25,"column":40}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":44},"generated":{"line":25,"column":50}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":34},"generated":{"line":25,"column":54}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":50},"generated":{"line":25,"column":56}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":62},"generated":{"line":25,"column":68}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":34},"generated":{"line":25,"column":69}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":25,"column":70}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":26,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":19,"column":1},"generated":{"line":26,"column":5}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":27,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":28,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":28,"column":12}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":28,"column":15}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":28,"column":16}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":23},"generated":{"line":28,"column":26}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":24},"generated":{"line":28,"column":27}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":23},"generated":{"line":28,"column":28}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":28,"column":29}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":28},"generated":{"line":28,"column":31}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":28,"column":32}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":35,"column":1},"generated":{"line":28,"column":33}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":29,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":30,"column":0}},{"source":"challenges/359-paperfold-sequence.ts","name":null,"original":{"line":38,"column":1},"generated":{"line":31,"column":0}}],"sources":{"challenges/359-paperfold-sequence.ts":"/**\n * Challenge #359 - Regular Paperfold Sequence Generator\n * https://www.reddit.com/r/dailyprogrammer/comments/8g0iil/20180430_challenge_359_easy_regular_paperfold/\n * Recursion idea was from a solution provided\n */\n\n{\n\ttype PaperfoldFunction = (fold: number[], sequences: number) => number[];\n\n\t/**\n\t * paperfold function\n\t *\n\t * In each iteration of this process, a 1 is placed at the end of the previous iteration's string,\n\t * then this string is repeated in reverse order, replacing 0 by 1 and vice versa.\n\t *\n\t * @param {number[]} fold\n\t * @param {number} sequences\n\t */\n\tconst paperfold: PaperfoldFunction = (\n\t\tfold: number[] = [1],\n\t\tsequences: number = 7\n\t): number[] => {\n\t\tfold.push(\n\t\t\t1,\n\t\t\t...fold\n\t\t\t\t.slice(0)\n\t\t\t\t.reverse()\n\t\t\t\t.map(n => +!n)\n\t\t);\n\n\t\treturn sequences === 0 ? fold : paperfold(fold, sequences - 1);\n\t};\n\n\t// console.log(paperfold([1], 0));\n\tconsole.log(paperfold([1], 1));\n\t// console.log(paperfold([1], 2));\n\t// console.log(paperfold([1], 3));\n}\n"},"lineCount":null}},"hash":"a2f89e0ae9dc0c224feb69aca2f664d1","cacheData":{"env":{}},"id":14}